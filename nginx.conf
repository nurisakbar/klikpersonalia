# Nginx Configuration for Payroll Management System
# Production Server Configuration

# Upstream configuration for load balancing (if multiple app servers)
upstream app_servers {
    server 127.0.0.1:8000;
    # Add more servers for load balancing
    # server 127.0.0.1:8001;
    # server 127.0.0.1:8002;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

# Main server block
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/your-domain.crt;
    ssl_certificate_key /etc/ssl/private/your-domain.key;
    ssl_trusted_certificate /etc/ssl/certs/your-domain-chain.crt;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; img-src 'self' data: https:; font-src 'self' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; connect-src 'self' https:; frame-ancestors 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Document root
    root /var/www/payroll-system/public;
    index index.php index.html index.htm;
    
    # Character encoding
    charset utf-8;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # Client max body size
    client_max_body_size 64M;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Security: Hide server information
        server_tokens off;
    }
    
    # API endpoints with specific rate limiting
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        try_files $uri $uri/ /index.php?$query_string;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
    }
    
    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/auth/(login|register|forgot-password) {
        limit_req zone=login burst=3 nodelay;
        
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP processing
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # FastCGI optimizations
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    
    # Static file caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|eot|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Security headers for static files
        add_header X-Content-Type-Options nosniff;
    }
    
    # Laravel storage files
    location /storage/ {
        alias /var/www/payroll-system/storage/app/public/;
        
        # Security: Prevent direct access to sensitive files
        location ~* \.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # Cache static files
        location ~* \.(jpg|jpeg|png|gif|ico|pdf|doc|docx|xls|xlsx)$ {
            expires 1y;
            add_header Cache-Control "public";
        }
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup files
    location ~ \.(bak|backup|old|orig|original|copy)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to configuration files
    location ~ \.(env|config|ini|log|sql|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to version control files
    location ~ /\.(git|svn|hg|bzr|cvs) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to temporary files
    location ~ \.(tmp|temp|swp|swo)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Error pages
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/payroll-system.access.log;
    error_log /var/log/nginx/payroll-system.error.log;
}

# Mobile API subdomain (optional)
server {
    listen 443 ssl http2;
    server_name api.your-domain.com;
    
    # SSL Configuration (same as main domain)
    ssl_certificate /etc/ssl/certs/your-domain.crt;
    ssl_certificate_key /etc/ssl/private/your-domain.key;
    ssl_trusted_certificate /etc/ssl/certs/your-domain-chain.crt;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Document root
    root /var/www/payroll-system/public;
    index index.php;
    
    # Character encoding
    charset utf-8;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml;
    
    # Client max body size
    client_max_body_size 16M;
    
    # Rate limiting for mobile API
    limit_req zone=api burst=20 nodelay;
    
    # Mobile API endpoints
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        
        # CORS headers for mobile API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
    }
    
    # PHP processing
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # FastCGI optimizations
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging
    access_log /var/log/nginx/payroll-system-mobile.access.log;
    error_log /var/log/nginx/payroll-system-mobile.error.log;
}

# Load balancer configuration (if using multiple servers)
upstream backend {
    # Sticky sessions for better performance
    ip_hash;
    
    # App servers
    server 127.0.0.1:8000 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:8001 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:8002 weight=1 max_fails=3 fail_timeout=30s;
    
    # Health check
    keepalive 32;
}

# Rate limiting configuration
map $http_x_forwarded_for $real_ip {
    default $remote_addr;
    ~^(\d+\.\d+\.\d+\.\d+),?.*$ $1;
}

# Security: Block bad bots
map $http_user_agent $bad_bot {
    default 0;
    ~*bot 1;
    ~*crawler 1;
    ~*spider 1;
    ~*scraper 1;
    ~*harvester 1;
    ~*collector 1;
    ~*grabber 1;
    ~*extractor 1;
    ~*downloader 1;
    ~*fetcher 1;
    ~*gatherer 1;
    ~*harvest 1;
    ~*collect 1;
    ~*grab 1;
    ~*extract 1;
    ~*download 1;
    ~*fetch 1;
    ~*gather 1;
}

# Block bad bots
if ($bad_bot) {
    return 403;
}

# Security: Block suspicious requests
if ($request_uri ~* "\.\./") {
    return 403;
}

if ($request_uri ~* "\.\.\\") {
    return 403;
}

if ($request_uri ~* "\.\.%2f") {
    return 403;
}

if ($request_uri ~* "\.\.%5c") {
    return 403;
}

# Security: Block SQL injection attempts
if ($request_uri ~* "union.*select") {
    return 403;
}

if ($request_uri ~* "select.*from") {
    return 403;
}

if ($request_uri ~* "insert.*into") {
    return 403;
}

if ($request_uri ~* "update.*set") {
    return 403;
}

if ($request_uri ~* "delete.*from") {
    return 403;
}

if ($request_uri ~* "drop.*table") {
    return 403;
}

if ($request_uri ~* "create.*table") {
    return 403;
}

if ($request_uri ~* "alter.*table") {
    return 403;
}

# Security: Block XSS attempts
if ($request_uri ~* "<script") {
    return 403;
}

if ($request_uri ~* "javascript:") {
    return 403;
}

if ($request_uri ~* "onload=") {
    return 403;
}

if ($request_uri ~* "onerror=") {
    return 403;
}

if ($request_uri ~* "onclick=") {
    return 403;
}

# Security: Block file inclusion attempts
if ($request_uri ~* "\.\./") {
    return 403;
}

if ($request_uri ~* "\.\.\\") {
    return 403;
}

if ($request_uri ~* "\.\.%2f") {
    return 403;
}

if ($request_uri ~* "\.\.%5c") {
    return 403;
}

# Security: Block command injection attempts
if ($request_uri ~* ";.*ls") {
    return 403;
}

if ($request_uri ~* ";.*cat") {
    return 403;
}

if ($request_uri ~* ";.*rm") {
    return 403;
}

if ($request_uri ~* ";.*wget") {
    return 403;
}

if ($request_uri ~* ";.*curl") {
    return 403;
}

# Security: Block directory traversal attempts
if ($request_uri ~* "\.\./") {
    return 403;
}

if ($request_uri ~* "\.\.\\") {
    return 403;
}

if ($request_uri ~* "\.\.%2f") {
    return 403;
}

if ($request_uri ~* "\.\.%5c") {
    return 403;
}

# Performance: Enable gzip for all text-based content
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/xml+rss
    application/json
    application/xml
    image/svg+xml;

# Performance: Enable browser caching
location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|eot|svg)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary Accept-Encoding;
}

# Performance: Enable microcaching for dynamic content
location ~ \.php$ {
    fastcgi_cache PAYROLL_CACHE;
    fastcgi_cache_valid 200 60m;
    fastcgi_cache_valid 404 1m;
    fastcgi_cache_key "$request_method$request_uri";
    fastcgi_cache_use_stale error timeout updating invalid_header http_500;
    fastcgi_cache_min_uses 1;
    fastcgi_cache_lock on;
    add_header X-FastCGI-Cache $upstream_cache_status;
}

# Monitoring: Enable status page (restrict access)
location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    allow 192.168.1.0/24;
    deny all;
}

# Security: Hide Nginx version
server_tokens off;

# Performance: Optimize worker processes
worker_processes auto;
worker_connections 1024;
worker_rlimit_nofile 65535;

# Performance: Enable sendfile
sendfile on;
tcp_nopush on;
tcp_nodelay on;
keepalive_timeout 65;
types_hash_max_size 2048;

# Security: Disable server tokens
server_tokens off;

# Logging: Configure access and error logs
access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

# Security: Configure file descriptor limits
worker_rlimit_nofile 65535;

# Performance: Configure event module
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP configuration
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Access log
    access_log /var/log/nginx/access.log main;
    
    # Performance: Enable sendfile
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Security: Hide Nginx version
    server_tokens off;
    
    # Performance: Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # Security: Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Include server configurations
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
} 